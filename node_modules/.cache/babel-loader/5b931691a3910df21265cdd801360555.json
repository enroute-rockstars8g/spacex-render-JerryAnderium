{"ast":null,"code":"var _jsxFileName = \"/Users/Enroute/Desktop/220407_Assigment5/spacex-render-JerryAnderium/src/Sites/Ships/component.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Ships } from '../../components/Ships/component';\nimport { LoadMsg } from '../../components/Loading/component';\nimport { ErrMsg } from '../../components/Error/component';\nimport { getShips } from '../../services/spacex';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ShipsSite = () => {\n  _s();\n\n  const [ships, setShips] = useState([]);\n  const [Load, setIsLoading] = useState(false);\n  const [Err, setIsError] = useState(false);\n  useEffect(() => {\n    async function get() {\n      try {\n        setIsLoading(true);\n        const DataS = await getShips();\n        setShips(DataS);\n        setIsLoading(false);\n      } catch (e) {\n        console.error(e);\n        setIsError(true);\n      }\n    }\n\n    get();\n  }, []);\n  console.log(ships);\n  const mappedShips = ships.map(ships => /*#__PURE__*/_jsxDEV(Ships, {\n    ship: ships\n  }, ships.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this));\n\n  if (Err && !Load) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(ErrMsg, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this);\n  }\n\n  return !Err && Load ? /*#__PURE__*/_jsxDEV(LoadMsg, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    children: mappedShips\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ShipsSite, \"zS9WzTM07xTjIQMZG9wbM7qGDw8=\");\n\n_c = ShipsSite;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShipsSite\");","map":{"version":3,"sources":["/Users/Enroute/Desktop/220407_Assigment5/spacex-render-JerryAnderium/src/Sites/Ships/component.tsx"],"names":["React","useEffect","useState","Ships","LoadMsg","ErrMsg","getShips","ShipsSite","ships","setShips","Load","setIsLoading","Err","setIsError","get","DataS","e","console","error","log","mappedShips","map","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,KAAT,QAAsB,kCAAtB;AACA,SAASC,OAAT,QAAwB,oCAAxB;AACA,SAASC,MAAT,QAAuB,kCAAvB;AACA,SAASC,QAAT,QAAyB,uBAAzB;;AAEA,OAAO,MAAMC,SAAS,GAAG,MAAM;AAAA;;AAC7B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAM,EAAN,CAAlC;AACA,QAAM,CAACQ,IAAD,EAAOC,YAAP,IAAuBT,QAAQ,CAAC,KAAD,CAArC;AACA,QAAM,CAACU,GAAD,EAAMC,UAAN,IAAoBX,QAAQ,CAAC,KAAD,CAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAea,GAAf,GAAqB;AACnB,UAAI;AACFH,QAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,cAAMI,KAAK,GAAG,MAAMT,QAAQ,EAA5B;AACAG,QAAAA,QAAQ,CAACM,KAAD,CAAR;AACAJ,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,OALD,CAKE,OAAOK,CAAP,EAAU;AACVC,QAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACAH,QAAAA,UAAU,CAAC,IAAD,CAAV;AACD;AACF;;AACDC,IAAAA,GAAG;AACJ,GAbQ,EAaN,EAbM,CAAT;AAeAG,EAAAA,OAAO,CAACE,GAAR,CAAYX,KAAZ;AAEA,QAAMY,WAAW,GAAGZ,KAAK,CAACa,GAAN,CAAWb,KAAD,iBAC5B,QAAC,KAAD;AAAsB,IAAA,IAAI,EAAEA;AAA5B,KAAYA,KAAK,CAACc,EAAlB;AAAA;AAAA;AAAA;AAAA,UADkB,CAApB;;AAIA,MAAIV,GAAG,IAAI,CAACF,IAAZ,EAAkB;AAChB,wBACE;AAAA,6BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAED,SAAO,CAACE,GAAD,IAAQF,IAAR,gBACL,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,UADK,gBAGL;AAAA,cAAMU;AAAN;AAAA;AAAA;AAAA;AAAA,UAHF;AAKD,CAvCM;;GAAMb,S;;KAAAA,S","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { Ships } from '../../components/Ships/component'\nimport { LoadMsg } from '../../components/Loading/component'\nimport { ErrMsg } from '../../components/Error/component'\nimport { getShips } from '../../services/spacex'\n\nexport const ShipsSite = () => {\n  const [ships, setShips] = useState<any>([])\n  const [Load, setIsLoading] = useState(false)\n  const [Err, setIsError] = useState(false)\n\n  useEffect(() => {\n    async function get() {\n      try {\n        setIsLoading(true)\n        const DataS = await getShips()\n        setShips(DataS)\n        setIsLoading(false)\n      } catch (e) {\n        console.error(e)\n        setIsError(true)\n      }\n    }\n    get()\n  }, [])\n\n  console.log(ships)\n\n  const mappedShips = ships.map((ships: any) => (\n    <Ships key={ships.id} ship={ships} />\n  ))\n\n  if (Err && !Load) {\n    return (\n      <div>\n        <ErrMsg />\n      </div>\n    )\n  }\n\n  return !Err && Load ? (\n    <LoadMsg />\n  ) : (\n    <div>{mappedShips}</div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}