{"ast":null,"code":"var _jsxFileName = \"/Users/Enroute/Desktop/220407_Assigment5/spacex-render-JerryAnderium/src/pages/missions/component.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { MissionCard } from '../../components/Missions/component';\nimport { LoadingMessage } from '../../components/Loading/component';\nimport { ErrorMessage } from '../../components/Error/component';\nimport { getMissions } from '../../services/spacex';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MissionsPage = () => {\n  _s();\n\n  const [missions, setMissions] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n  useEffect(() => {\n    async function get() {\n      try {\n        setIsLoading(true);\n        const missionsData = await getMissions();\n        setMissions(missionsData);\n        setIsLoading(false);\n      } catch (e) {\n        console.error(e);\n        setIsError(true);\n      }\n    }\n\n    get();\n  }, []);\n  const mappedMissions = missions.map(mission => /*#__PURE__*/_jsxDEV(MissionCard, {\n    mission: mission\n  }, mission.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this));\n\n  if (isError && !isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(ErrorMessage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this);\n  }\n\n  return !isError && isLoading ? /*#__PURE__*/_jsxDEV(LoadingMessage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col max-w-xl\",\n    children: mappedMissions\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MissionsPage, \"NYxqnitruGTSI4EhPc9qkD73z20=\");\n\n_c = MissionsPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"MissionsPage\");","map":{"version":3,"sources":["/Users/Enroute/Desktop/220407_Assigment5/spacex-render-JerryAnderium/src/pages/missions/component.tsx"],"names":["React","useEffect","useState","MissionCard","LoadingMessage","ErrorMessage","getMissions","MissionsPage","missions","setMissions","isLoading","setIsLoading","isError","setIsError","get","missionsData","e","console","error","mappedMissions","map","mission","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,qCAA5B;AACA,SAASC,cAAT,QAA+B,oCAA/B;AACA,SAASC,YAAT,QAA6B,kCAA7B;AACA,SAASC,WAAT,QAA4B,uBAA5B;;AAEA,OAAO,MAAMC,YAAY,GAAG,MAAM;AAAA;;AAChC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAM,EAAN,CAAxC;AACA,QAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,KAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAea,GAAf,GAAqB;AACnB,UAAI;AACFH,QAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,cAAMI,YAAY,GAAG,MAAMT,WAAW,EAAtC;AACAG,QAAAA,WAAW,CAACM,YAAD,CAAX;AACAJ,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,OALD,CAKE,OAAOK,CAAP,EAAU;AACVC,QAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACAH,QAAAA,UAAU,CAAC,IAAD,CAAV;AACD;AACF;;AACDC,IAAAA,GAAG;AACJ,GAbQ,EAaN,EAbM,CAAT;AAeA,QAAMK,cAAc,GAAGX,QAAQ,CAACY,GAAT,CAAcC,OAAD,iBAClC,QAAC,WAAD;AAA8B,IAAA,OAAO,EAAEA;AAAvC,KAAkBA,OAAO,CAACC,EAA1B;AAAA;AAAA;AAAA;AAAA,UADqB,CAAvB;;AAIA,MAAIV,OAAO,IAAI,CAACF,SAAhB,EAA2B;AACzB,wBACE;AAAA,6BACE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAED,SAAO,CAACE,OAAD,IAAYF,SAAZ,gBACL,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,UADK,gBAGL;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA,cAAyCS;AAAzC;AAAA;AAAA;AAAA;AAAA,UAHF;AAKD,CArCM;;GAAMZ,Y;;KAAAA,Y","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { MissionCard } from '../../components/Missions/component'\nimport { LoadingMessage } from '../../components/Loading/component'\nimport { ErrorMessage } from '../../components/Error/component'\nimport { getMissions } from '../../services/spacex'\n\nexport const MissionsPage = () => {\n  const [missions, setMissions] = useState<any>([])\n  const [isLoading, setIsLoading] = useState(false)\n  const [isError, setIsError] = useState(false)\n\n  useEffect(() => {\n    async function get() {\n      try {\n        setIsLoading(true)\n        const missionsData = await getMissions()\n        setMissions(missionsData)\n        setIsLoading(false)\n      } catch (e) {\n        console.error(e)\n        setIsError(true)\n      }\n    }\n    get()\n  }, [])\n\n  const mappedMissions = missions.map((mission: any) => (\n    <MissionCard key={mission.id} mission={mission} />\n  ))\n\n  if (isError && !isLoading) {\n    return (\n      <div>\n        <ErrorMessage />\n      </div>\n    )\n  }\n\n  return !isError && isLoading ? (\n    <LoadingMessage />\n  ) : (\n    <div className=\"flex flex-col max-w-xl\">{mappedMissions}</div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}